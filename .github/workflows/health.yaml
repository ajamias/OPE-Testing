name: health check
on:
  push:
    branches: "*"
env:
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
jobs:
  Build:
    runs-on: ubuntu-latest #use the latest ubuntu container image 
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
     
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Build the image
        run: |
          #make build
          docker pull quay.io/gaheyrich/ope:beta-ope
      - name: Push beta version
        run: |
          REGISTRY=$(cat base/ope_book_registry)
          REGISTRY_USER=$(cat base/ope_book_user)
          docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
          docker push quay.io/gaheyrich/ope:beta-ope
          #make push
      - name: Show Debug info
        run: |
          IMAGE_TAG=$( make show-tag )
          echo "For debugging purposes, here is the image tag:"
          echo "  $IMAGE_TAG"
  health-check:
    runs-on: ubuntu-latest #use the latest ubuntu container image 
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4 #use action to install python
        with:
          python-version: "3.9"
      - name: Install dependencies #requirements docs unable to read, hard installing dependencies 
        run: |
          pip install -r requirements/requirements.txt     
      - name: make build # makes the container image build 
        run: |
          make build
      - name: check health #runs image and checks if it is up running after 12 seconds 
        run: |
          IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | head -n 1) #get built image
          docker run -d --name stable $IMAGE 
          sleep 7 #wait to start to check health
          CONTAINER_NAME="stable"
          HEALTH=$(docker ps --format "{{.Names}}: {{.Status}}" | grep "$CONTAINER_NAME" | awk '{print $2}') #extract health status
          echo ""
          if [[ "$HEALTH" == "Up" ]]; then
          echo "HEALTHY : container is up and running"
          else
          echo "ERROR : container is not running"
          exit -1
          fi
          echo ""
          docker stop stable
